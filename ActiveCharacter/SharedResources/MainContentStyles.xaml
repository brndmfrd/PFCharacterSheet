<ResourceDictionary x:Class="ActiveCharacter.SharedResources.MainContentStyles"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Style x:Key="MainContentButtonStyle" TargetType="{x:Type Label}">
        <Setter Property="Background" Value="#222222"/>
        <Setter Property="Foreground" Value="Teal"/>
        <Setter Property="Margin" Value="0,0,75,0"/>
        <Setter Property="FontSize" Value="16"/>
        
        <Setter Property="FontFamily" Value="Palatino"/>
    </Style>

    <Style x:Key="ButtonLabelStyle" TargetType="{x:Type Label}">
        <Setter Property="Background" Value="{x:Null}" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Margin" Value="0,50,0,0" />
    </Style>

    <Style x:Key="PrimaryContentListBox" TargetType="{x:Type ListBox}">
        <Setter Property="Background" Value="{x:Null}" />
        <Setter Property="Foreground" Value="Teal" />
        <!--<Setter Property="BorderBrush" Value="{x:Null}" />-->
        <Setter Property="BorderBrush" Value="CornflowerBlue" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden" />
        <Setter Property="FontSize" Value="18" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="False" />

        <!--A buffer of whitespace on the top and bottom of our Item Panels-->
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel Margin="0,100,0,200"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="PrimaryContentListBoxItem" TargetType="{x:Type ListBoxItem}">
        <!--This little piggy removes the system selection highlighting-->
        <Setter Property="IsSelected" Value="{Binding Content.IsSelected, Mode=TwoWay, RelativeSource={RelativeSource Self}}"/>
        <Setter Property="IsSelected" Value="{Binding Content.IsSelected, Mode=TwoWay, RelativeSource={RelativeSource Self}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <ContentPresenter/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <!--This little piggy controls the mouseover and selection text colors-->
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="AliceBlue"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="False">
                <Setter Property="Foreground" Value="#808080"/>
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Foreground" Value="AliceBlue"/>
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style x:Key="AuxContentListBox" TargetType="{x:Type ListBox}">
        <Setter Property="Background" Value="{x:Null}" />
        <Setter Property="Foreground" Value="Teal" />
        <Setter Property="BorderBrush" Value="CornflowerBlue" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden" />
        <Setter Property="FontSize" Value="18" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
    </Style>

    <!--DataGrid used for user input when creating a new character-->
    <Style x:Key="InputDataGridStyle" TargetType="{x:Type DataGrid}">
        <Style.Resources>            
            <!--Selected unit highlight color while row is active-->
            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Red" Opacity="0.4" />
            
            <!--Selected unit highlight color while row is inactive-->
            <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="AliceBlue" Opacity="0.0" />
            
            <!--Active editing cell background color-->
            <SolidColorBrush x:Key="{x:Static SystemColors.WindowBrushKey}" Color="AliceBlue" Opacity="0.2" />

            <Style TargetType="{x:Type DataGridColumnHeader}">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Margin" Value="5,0,5,0" />                
            </Style>
        </Style.Resources>

        <Setter Property="SelectionUnit" Value="Cell"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="AutoGenerateColumns" Value="False"/>
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="RowBackground" Value="Black"/>
        <Setter Property="AlternatingRowBackground" Value="#222222"/>
        <Setter Property="AlternationCount" Value="2"/>
        <Setter Property="IsReadOnly" Value="False"/>
        <Setter Property="CanUserAddRows" Value="True"/>
        <Setter Property="HeadersVisibility" Value="Column"/>
        <Setter Property="Foreground" Value="Teal"/>
    </Style>

</ResourceDictionary>
